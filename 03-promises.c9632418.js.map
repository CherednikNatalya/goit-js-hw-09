{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAGMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,SAAUF,SAASC,cAAc,qBACjCE,QAASH,SAASC,cAAc,oBAChCG,UAAWJ,SAASC,cAAc,uBAGpCI,QAAQC,IAAIR,EAAKC,MACjBD,EAAKC,KAAKQ,iBAAiB,UAO3B,SAAuBC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACvBL,EACFM,EAAApB,GAASqB,OAAOC,QAAQ,iDAExBF,EAAApB,GAASqB,OAAOE,QAAQ,+C,OAX9B,IAEMC,EAAUtB,EAAKM,UAAUiB,MAC/BhB,QAAQC,IAAIc,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delayRef: document.querySelector('input[name=delay]'),\n  stepRef: document.querySelector(\"input[name=step]\"),\n  amountRef: document.querySelector('input[name=amount]'), \n};\n\nconsole.log(refs.form);\nrefs.form.addEventListener('submit', createPromise)\n\nlet startDelay = null;\nlet position = 0\nconst amount  = refs.amountRef.value\nconsole.log(amount);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      Notiflix.Notify.success('✅ Fulfilled promise ${position} in ${delay}ms');\n    } else {\n      Notiflix.Notify.failure('❌ Rejected promise ${position} in ${delay}ms');\n    }  \n  });\n\n\n}\n\n\n\n\n\n\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delayRef","stepRef","amountRef","console","log","addEventListener","position","delay","shouldResolve","Math","random","Promise","resolve","reject","$parcel$interopDefault","Notify","success","failure","$ce04d3a99e08e73b$var$amount","value"],"version":3,"file":"03-promises.c9632418.js.map"}